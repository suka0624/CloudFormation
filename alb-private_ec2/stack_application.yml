AWSTemplateFormatVersion: '2010-09-09'
Description:
  EC2,ALB create
Parameters:
  ProjectId:
    Description: Project name id.
    Type: String
    MinLength: "3"
    MaxLength: "10"
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: must specify Project id.

Resources:
  # 踏み台サーバ
  StepServer:
    Type: AWS::EC2::Instance
    Properties:
      NetworkInterfaces:
        - SubnetId: !ImportValue "networkStack-PublicSubnetA"
          GroupSet:
            - !ImportValue "securityStack-StepServerSG"
          # Public IP割り当て
          AssociatePublicIpAddress: true
          DeviceIndex: "0"
      ImageId: ami-0056953fc28a2355f
      InstanceType: t2.micro
      Tags:
        - Key: 'Name'
          Value: !Join [ "-", [ "Ref":"ProjectId" ,"StepServer" ] ]
      # 個人のキー名を設定してください
      KeyName: s_suka

  # Webサーバ1
  WebServer001:
    Type: AWS::EC2::Instance
    Properties:
      NetworkInterfaces:
        - SubnetId: !ImportValue "networkStack-PrivateSubnetA"
          GroupSet:
            - !ImportValue "securityStack-WebServerSG"
          DeviceIndex: "0"
      ImageId: ami-0393e59de986af352
      InstanceType: t2.micro
      Tags:
        - Key: 'Name'
          Value: !Join [ "-", [ "Ref":"ProjectId" ,"WebServer001" ] ]
      # 個人のキー名を設定してください
      KeyName: s_suka

  # Webサーバ2
  WebServer002:
    Type: AWS::EC2::Instance
    Properties:
      NetworkInterfaces:
        - SubnetId: !ImportValue "networkStack-PrivateSubnetC"
          GroupSet:
            - !ImportValue "securityStack-WebServerSG"
          DeviceIndex: "0"
      ImageId: ami-0393e59de986af352
      InstanceType: t2.micro
      Tags:
        - Key: 'Name'
          Value: !Join [ "-", [ "Ref":"ProjectId" ,"WebServer002" ] ]
      # 個人のキー名を設定してください
      KeyName: s_suka

  # ALB
  WebALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: WebALB
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups:
        - !ImportValue "securityStack-ALBSG"
      Tags:
        - Key: Name
          Value: !Join [ "-", [ "Ref":"ProjectId" ,"WebALB" ] ]
      Subnets:
        - !ImportValue "networkStack-PublicSubnetA"
        - !ImportValue "networkStack-PublicSubnetC"

  # ターゲットグループ
  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !ImportValue "networkStack-VPCID"
      Name: ALBTargetGroup
      Protocol: HTTP
      Port: 80
      HealthCheckProtocol: HTTP
      HealthCheckPath: /
      HealthCheckPort: traffic-port
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      HealthCheckTimeoutSeconds: 5
      HealthCheckIntervalSeconds: 10
      Matcher:
        HttpCode: 200
      Targets:
        - Id:
            Ref: WebServer001
          Port: 80
        - Id:
            Ref: WebServer002
          Port: 80

  # リスナー (どのターゲットグループにリクエストを投げるか)
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            !Ref ALBTargetGroup
      LoadBalancerArn: 
        !Ref WebALB
      Port: 80
      Protocol: HTTP